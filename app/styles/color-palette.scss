// Utility Color Classes

$light-contrast-color: rgba(255, 255, 255, 0.87) !default;
$dark-contrast-color: rgba(0, 0, 0, 0.87) !default;
$strong-light-contrast-color: rgb(255, 255, 255) !default;

$foreground-light: (
  '1': rgba(255, 255, 255, 1.0),
  '2': rgba(255, 255, 255, 0.7),
  '3': rgba(255, 255, 255, 0.5),
  '4': rgba(255, 255, 255, 0.12),
  'shadow': '1px 1px 0px rgba(0, 0, 0, 0.4), -1px -1px 0px rgba(0, 0, 0, 0.4)'
) !default;

$foreground-dark: (
  '1': rgba(0, 0, 0, 0.87),
  '2': rgba(0, 0, 0, 0.54),
  '3': rgba(0, 0, 0, 0.38),
  '4': rgba(0, 0, 0, 0.12),
  'shadow': none
) !default;

$color-light-blue: (
    '50' : #edf8f9,
    '100' : #d1edf0,
    '200' : #b3e1e6,
    '300' : #94d4db,
    '400' : #7dcbd4,
    '500' : #66c2cc,
    '600' : #5ebcc7,
    '700' : #53b4c0,
    '800' : #49acb9,
    '900' : #389fad,
    'A100' : #f9feff,
    'A200' : #c6f8ff,
    'A400' : #93f1ff,
    'A700' : #7aeeff,
    'contrastDefaultColor': $dark-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-blue: (
    '50' : #e0f3f8,
    '100' : #b3e2ed,
    '200' : #80cfe1,
    '300' : #4dbcd4,
    '400' : #26adcb,
    '500' : #009fc2,
    '600' : #0097bc,
    '700' : #008db4,
    '800' : #0083ac,
    '900' : #00729f,
    'A100' : #c9eeff,
    'A200' : #96ddff,
    'A400' : #63ccff,
    'A700' : #4ac4ff,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-navy: (
    '50' : #e5e5eb,
    '100' : #bfbfce,
    '200' : #9494ae,
    '300' : #69698d,
    '400' : #494974,
    '500' : #29295c,
    '600' : #242454,
    '700' : #1f1f4a,
    '800' : #191941,
    '900' : #0f0f30,
    'A100' : #6e6eff,
    'A200' : #3b3bff,
    'A400' : #0808ff,
    'A700' : #0000ed,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-red: (
    '50' : #f9e4e9,
    '100' : #f0bbc8,
    '200' : #e78da3,
    '300' : #dd5f7e,
    '400' : #d53d62,
    '500' : #ce1b46,
    '600' : #c9183f,
    '700' : #c21437,
    '800' : #bc102f,
    '900' : #b00820,
    'A100' : #ffdbdf,
    'A200' : #ffa8b1,
    'A400' : #ff7584,
    'A700' : #ff5c6d,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-light-grey: (
    '50' : #fcfcfc,
    '100' : #f8f8f8,
    '200' : #f3f3f3,
    '300' : #eeeeee,
    '400' : #eaeaea,
    '500' : #e6e6e6,
    '600' : #e3e3e3,
    '700' : #dfdfdf,
    '800' : #dbdbdb,
    '900' : #d5d5d5,
    'A100' : #ffffff,
    'A200' : #ffffff,
    'A400' : #ffffff,
    'A700' : #ffffff,
    'contrastDefaultColor': $dark-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-grey: (
    '50' : #f5f5f5,
    '100' : #e6e6e6,
    '200' : #d5d5d5,
    '300' : #c4c4c4,
    '400' : #b7b7b7,
    '500' : #aaaaaa,
    '600' : #a3a3a3,
    '700' : #999999,
    '800' : #909090,
    '900' : #7f7f7f,
    'A100' : #ffffff,
    'A200' : #fbdddd,
    'A400' : #ffa7a7,
    'A700' : #ff8d8d,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-dark-grey: (
    '50' : #e7e7e7,
    '100' : #c2c2c2,
    '200' : #999999,
    '300' : #707070,
    '400' : #525252,
    '500' : #333333,
    '600' : #2e2e2e,
    '700' : #272727,
    '800' : #202020,
    '900' : #141414,
    'A100' : #ef6e6e,
    'A200' : #ea4040,
    'A400' : #f60000,
    'A700' : #dd0000,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-word-blue: (
    '50' : #e7f0fd,
    '100' : #c3d8fb,
    '200' : #9bbff8,
    '300' : #73a5f5,
    '400' : #5591f2,
    '500' : #377ef0,
    '600' : #3176ee,
    '700' : #2a6bec,
    '800' : #2361e9,
    '900' : #164ee5,
    'A100' : #ffffff,
    'A200' : #e2e9ff,
    'A400' : #afc2ff,
    'A700' : #96afff,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-ppt-orange: (
    '50' : #ffefe2,
    '100' : #ffd7b6,
    '200' : #ffbd85,
    '300' : #ffa354,
    '400' : #ff8f2f,
    '500' : #ff7b0a,
    '600' : #ff7309,
    '700' : #ff6807,
    '800' : #ff5e05,
    '900' : #ff4b03,
    'A100' : #ffffff,
    'A200' : #fff5f2,
    'A400' : #ffcebf,
    'A700' : #ffbaa6,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$color-excel-green: (
    '50' : #eaf6e5,
    '100' : #cbe9bf,
    '200' : #a9da94,
    '300' : #86cb69,
    '400' : #6cc048,
    '500' : #52b528,
    '600' : #4bae24,
    '700' : #41a51e,
    '800' : #389d18,
    '900' : #288d0f,
    'A100' : #c9ffbe,
    'A200' : #9eff8b,
    'A400' : #74ff58,
    'A700' : #5eff3f,
    'contrastDefaultColor': $light-contrast-color,
    'contrastDarkColors': ('50', '100', '200', '300', 'A100'),
    'contrastStrongLightColors': ('400', '500', '600', '700', 'A200', 'A400', 'A700')
) !default;

$shades: (
  'black': #000000,
  'white': #FFFFFF
) !default;

$background-light: map-merge($color-grey, (
  'default': 'A100',
)) !default;

$colors: () !default;

$colors: map-merge($colors,(
  'light-blue': $color-light-blue,
  'blue': $color-blue,
  'navy': $color-navy,
  'red': $color-red,
  'light-grey': $color-light-grey,
  'grey': $color-grey,
  'dark-grey': $color-dark-grey,
  'word-blue': $color-word-blue,
  'ppt-orange': $color-ppt-orange,
  'excel-green': $color-excel-green,
  'shades': $shades,
  'foreground-light': $foreground-light,
  'foreground-dark': $foreground-dark,
  'background-light': $background-light,
));

$default-color: '500' !default;

// returns color shade given a color palette name or a palette map
@function color($color, $type: null) {
  $curr_color: null;
  // color is a string case
  @if type-of($color) == 'string' and map-has-key($colors, $color) {
    $curr_color: map-get($colors, $color);
  } @else {
    // color is a map
    $curr_color: $color;
  }

  // if no type was provided:
  //   - use 'default' key if present
  //   - use '500' from $default-color
  @if ($type == null) {
    @if map-has-key($curr_color, 'default') {
      $type: map-get($curr_color, 'default');
    } @else {
      $type: $default-color;
    }
  }

  @return map-get($curr_color, $type);
}

// returns the correct contrast color for the given color
@function contrastColor($color, $type: null) {
  $curr_color: null;
  // color is a string case
  @if type-of($color) == 'string' and map-has-key($colors, $color) {
    $curr_color: map-get($colors, $color);
  } @else {
    // color is a map
    $curr_color: $color;
  }

  // if no type was provided:
  //   - use 'default' key if present
  //   - use '500' from $default-color
  @if ($type == null) {
    @if map-has-key($curr_color, 'default') {
      $type: map-get($curr_color, 'default');
    } @else {
      $type: $default-color;
    }
  }

  // $curr_color hold the color hash
  // contrastDarkColors holds the shades of dark contrast
  // contrastLightColors holds the shades of light contrast
  // contrastStrongLightColors holds the shades of strong light contrast
  $contrastDarkColors: map-get($curr_color, 'contrastDarkColors');
  $contrastLightColors: map-get($curr_color, 'contrastLightColors');
  $contrastStrongLightColors: map-get($curr_color, 'contrastStrongLightColors');
  $contrastDefaultColor: map-get($curr_color, 'contrastDefaultColor');

  @if $contrastDarkColors != null and index($contrastDarkColors, $type) != null {
    @return $dark-contrast-color;
  } @else if $contrastLightColors != null and index($contrastLightColors, $type) != null {
    @return $light-contrast-color;
  } @else if $contrastStrongLightColors != null and index($contrastStrongLightColors, $type) != null {
    @return $strong-light-contrast-color;
  } @else {
    @return $contrastDefaultColor;
  }
}
